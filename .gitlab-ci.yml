
lighthouse:
  image: registry.gitlab.com/gitlab-ci-utils/lighthouse:latest
  stage: test
  script:
    # Start a local static server, serving the site in the ./site/ folder,
    # piping the output to null so it is not displayed, and waiting
    # until the server is available (port 3000 is the default for serve).
    - serve ./site/ > /dev/null 2>&1 & wait-on http://localhost:1338/
    # Run lighthouse against the test site in headless mode, but otherwise
    # with the default settings.
    - lighthouse http://localhost:1338 --chrome-flags="--headless"
  artifacts:
    # Always save artifacts. This is needed if lighthouse is run configured
    # to fail on certain criteria, and will ensure the report is saved.
    when: always
    # Save the lighthouse report, which by default is named for the site
    # analyzed and the current time.
    paths:
      - localhost*.html


#stages:
#  - build
#  - test
#  - archive

#variables:
#  APP: "http://localhost:1338"

# needing setup
#before_script:
# - apt-get update && apt-get install -y curl wget bash unzip
#  - npm ci
#  - npm run build --if-present  # currently not

#https://www.jenkins.io/doc/book/pipeline/docker/
#https://hub.docker.com/r/cypress/browsers/
#build:
#  stage: build
  # node:20 for more consistency instead ?
  # node:20 is better but its still missing chrome in container
  # build can just be with node:20 its faster?
  # image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
#  image: node:20
#  script:
#    - echo "Build completed"
#  artifacts:
#    paths:
#      - ./

# trying axe first -- quicker ?
#axe:
#  stage: test
#  image: cypress/browsers:node-20.14.0-chrome-125.0.6422.141-1-ff-126.0.1-edge-125.0.2535.85-1
  # strategy matrix - webpage - pages ? script has them manually for now
#  script:
#    - npm install -g chromedriver@124 @axe-core/cli
#    - npm start & npx wait-on $APP
#    - mkdir -p results/axe/
##    - axe --chromedriver-path $(which chromedriver) --chrome-options="--headless=new" $APP/perceivable --dir ./results/axe/ --save axe-results-perceivable.json
#    - axe --chromedriver-path $(which chromedriver) --chrome-options="--headless=new" $APP/operable --dir ./results/axe/ --save axe-results-operable.json
#    - axe --chromedriver-path $(which chromedriver) --chrome-options="--headless=new" $APP/understandable --dir ./results/axe/ --save axe-results-understandable.json
#  artifacts:
#    paths:
#      - results/axe/

# https://github.com/GoogleChrome/chrome-launcher/blob/main/docs/chrome-flags-for-tools.md

# ref : https://gitlab.com/gitlab-ci-utils/lighthouse
# ref for custom runner + lhci https://medium.com/1mgofficial/integrating-lighthouse-ci-in-your-gitlab-ci-cd-pipeline-1233b9223e5c